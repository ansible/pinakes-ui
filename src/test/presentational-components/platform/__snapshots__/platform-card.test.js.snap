// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlatformCard /> should render correctly 1`] = `
<PlatformCard
  id="Foo"
>
  <GalleryItem>
    <div>
      <Styled(Card)
        key="Foo"
        ouiaId="platform-Foo"
      >
        <Card
          className="sc-gKXOVf dpDjnC"
          ouiaId="platform-Foo"
        >
          <article
            className="pf-c-card sc-gKXOVf dpDjnC"
            data-ouia-component-id="platform-Foo"
            data-ouia-component-type="PF4/Card"
            data-ouia-safe={true}
            id=""
          >
            <CardHeader>
              <div
                className="pf-c-card__header"
              >
                <Styled(Level)>
                  <Level
                    className="sc-dkzDqf gQxYYg"
                  >
                    <div
                      className="pf-l-level sc-dkzDqf gQxYYg"
                    >
                      <Styled(LevelItem)>
                        <LevelItem
                          className="sc-gsnTZi kkgzEn"
                        >
                          <div
                            className="sc-gsnTZi kkgzEn"
                          >
                            <CardIcon
                              height={40}
                              sourceId="Foo"
                            >
                              <styled.div
                                height={40}
                              >
                                <div
                                  className="sc-ksZaOG kyQRYf"
                                  height={40}
                                >
                                  <IconPlaceholder
                                    height={40}
                                  >
                                    <svg
                                      height={40}
                                      width={40}
                                    >
                                      <circle
                                        cx={20}
                                        cy={20}
                                        fill="#ecebeb"
                                        r={20}
                                      />
                                    </svg>
                                  </IconPlaceholder>
                                  <Styled(c)
                                    delayTime={0}
                                    height={0}
                                    hidden={true}
                                    onError={[Function]}
                                    onLoad={[Function]}
                                    threshold={2000}
                                  >
                                    <c
                                      afterLoad={[Function]}
                                      beforeLoad={[Function]}
                                      className="sc-breuTD hXWnqt"
                                      delayMethod="throttle"
                                      delayTime={0}
                                      effect=""
                                      height={0}
                                      hidden={true}
                                      onError={[Function]}
                                      onLoad={[Function]}
                                      placeholderSrc={null}
                                      threshold={2000}
                                      useIntersectionObserver={true}
                                      visibleByDefault={false}
                                      wrapperClassName=""
                                    >
                                      <u
                                        afterLoad={[Function]}
                                        beforeLoad={[Function]}
                                        className="sc-breuTD hXWnqt"
                                        delayMethod="throttle"
                                        delayTime={0}
                                        height={0}
                                        threshold={2000}
                                        useIntersectionObserver={true}
                                        visibleByDefault={false}
                                      >
                                        <img
                                          className="sc-breuTD hXWnqt"
                                          height={0}
                                          hidden={true}
                                          onError={[Function]}
                                          onLoad={[Function]}
                                        />
                                      </u>
                                    </c>
                                  </Styled(c)>
                                </div>
                              </styled.div>
                            </CardIcon>
                          </div>
                        </LevelItem>
                      </Styled(LevelItem)>
                      <Tooltip
                        content={
                          <Text>
                            Refresh platform
                          </Text>
                        }
                      >
                        <Popper
                          appendTo={[Function]}
                          distance={15}
                          enableFlip={true}
                          flipBehavior={
                            Array [
                              "top",
                              "right",
                              "bottom",
                              "left",
                              "top",
                              "right",
                              "bottom",
                            ]
                          }
                          isVisible={false}
                          onBlur={[Function]}
                          onDocumentClick={false}
                          onDocumentKeyDown={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onPopperMouseEnter={[Function]}
                          onPopperMouseLeave={[Function]}
                          onTriggerEnter={[Function]}
                          placement="top"
                          popper={
                            <div
                              aria-live="off"
                              className="pf-c-tooltip"
                              id="pf-tooltip-1"
                              role="tooltip"
                              style={
                                Object {
                                  "maxWidth": null,
                                  "opacity": 0,
                                  "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                }
                              }
                            >
                              <TooltipArrow />
                              <TooltipContent
                                isLeftAligned={false}
                              >
                                <Text>
                                  Refresh platform
                                </Text>
                              </TooltipContent>
                            </div>
                          }
                          popperMatchesTriggerWidth={false}
                          positionModifiers={
                            Object {
                              "bottom": "pf-m-bottom",
                              "bottom-end": "pf-m-bottom-right",
                              "bottom-start": "pf-m-bottom-left",
                              "left": "pf-m-left",
                              "left-end": "pf-m-left-bottom",
                              "left-start": "pf-m-left-top",
                              "right": "pf-m-right",
                              "right-end": "pf-m-right-bottom",
                              "right-start": "pf-m-right-top",
                              "top": "pf-m-top",
                              "top-end": "pf-m-top-right",
                              "top-start": "pf-m-top-left",
                            }
                          }
                          trigger={
                            <Button
                              id="refresh-platform-Foo"
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="refresh-platform-Foo"
                              variant="link"
                            >
                              <SyncAltIcon
                                color="blue"
                                noVerticalAlign={false}
                                size="sm"
                              />
                            </Button>
                          }
                          zIndex={9999}
                        >
                          <FindRefWrapper
                            onFoundRef={[Function]}
                          >
                            <Button
                              id="refresh-platform-Foo"
                              isDisabled={false}
                              onClick={[Function]}
                              ouiaId="refresh-platform-Foo"
                              variant="link"
                            >
                              <ButtonBase
                                id="refresh-platform-Foo"
                                innerRef={null}
                                isDisabled={false}
                                onClick={[Function]}
                                ouiaId="refresh-platform-Foo"
                                variant="link"
                              >
                                <button
                                  aria-disabled={false}
                                  aria-label={null}
                                  className="pf-c-button pf-m-link"
                                  data-ouia-component-id="refresh-platform-Foo"
                                  data-ouia-component-type="PF4/Button"
                                  data-ouia-safe={true}
                                  disabled={false}
                                  id="refresh-platform-Foo"
                                  onClick={[Function]}
                                  role={null}
                                  type="button"
                                >
                                  <SyncAltIcon
                                    color="blue"
                                    key="refresh-Foo"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="blue"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="0 0 512 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"
                                      />
                                    </svg>
                                  </SyncAltIcon>
                                </button>
                              </ButtonBase>
                            </Button>
                          </FindRefWrapper>
                        </Popper>
                      </Tooltip>
                    </div>
                  </Level>
                </Styled(Level)>
              </div>
            </CardHeader>
            <Styled(CardBody)>
              <CardBody
                className="sc-ftvSup fuRIVo"
              >
                <div
                  className="pf-c-card__body sc-ftvSup fuRIVo"
                >
                  <TextContent>
                    <div
                      className="pf-c-content"
                    >
                      <CatalogLink
                        pathname="/platforms/platform/platform-templates"
                        searchParams={
                          Object {
                            "platform": "Foo",
                          }
                        }
                      >
                        <Styled(Component)
                          to={
                            Object {
                              "hash": undefined,
                              "pathname": "/platforms/platform/platform-templates",
                              "search": "?platform=Foo",
                            }
                          }
                        >
                          <Component
                            className="sc-eCYdqJ cMnjNY"
                            to={
                              Object {
                                "hash": undefined,
                                "pathname": "/platforms/platform/platform-templates",
                                "search": "?platform=Foo",
                              }
                            }
                          >
                            <Link
                              className="sc-eCYdqJ cMnjNY"
                              to={
                                Object {
                                  "hash": undefined,
                                  "pathname": "/platforms/platform/platform-templates",
                                  "search": "?platform=Foo",
                                }
                              }
                            >
                              <LinkAnchor
                                className="sc-eCYdqJ cMnjNY"
                                href="/platforms/platform/platform-templates?platform=Foo"
                                navigate={[Function]}
                              >
                                <a
                                  className="sc-eCYdqJ cMnjNY"
                                  href="/platforms/platform/platform-templates?platform=Foo"
                                  onClick={[Function]}
                                >
                                  <Text
                                    className="pf-u-mb-0"
                                    component="h3"
                                  >
                                    <h3
                                      className="pf-u-mb-0"
                                      data-ouia-component-id="OUIA-Generated-Text-1"
                                      data-ouia-component-type="PF4/Text"
                                      data-ouia-safe={true}
                                      data-pf-content={true}
                                    >
                                      <styled.div>
                                        <div
                                          className="sc-hKMtZM emGFBx"
                                        />
                                      </styled.div>
                                    </h3>
                                  </Text>
                                </a>
                              </LinkAnchor>
                            </Link>
                          </Component>
                        </Styled(Component)>
                      </CatalogLink>
                    </div>
                  </TextContent>
                  <ItemDetails
                    toDisplay={
                      Array [
                        "description",
                        "modified",
                      ]
                    }
                  >
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={<div />}
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-description"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-description"
                          >
                            <div
                              className="sc-bczRLJ kBMtkl"
                            />
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={<div />}
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="off"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-2"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div />
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              trigger={
                                <span>
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span>
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={<div />}
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-modified"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-modified"
                          >
                            <div
                              className="sc-bczRLJ kBMtkl"
                            />
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={<div />}
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onPopperMouseEnter={[Function]}
                              onPopperMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  aria-live="off"
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-3"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div />
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "bottom-end": "pf-m-bottom-right",
                                  "bottom-start": "pf-m-bottom-left",
                                  "left": "pf-m-left",
                                  "left-end": "pf-m-left-bottom",
                                  "left-start": "pf-m-left-top",
                                  "right": "pf-m-right",
                                  "right-end": "pf-m-right-bottom",
                                  "right-start": "pf-m-right-top",
                                  "top": "pf-m-top",
                                  "top-end": "pf-m-top-right",
                                  "top-start": "pf-m-top-left",
                                }
                              }
                              trigger={
                                <span>
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span>
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                  </ItemDetails>
                </div>
              </CardBody>
            </Styled(CardBody)>
            <CardFooter>
              <div
                className="pf-c-card__footer"
              >
                <Label
                  color="red"
                  variant="filled"
                >
                  <span
                    className="pf-c-label pf-m-red"
                  >
                    <span
                      className="pf-c-label__content"
                    >
                      Unavailable
                    </span>
                  </span>
                </Label>
              </div>
            </CardFooter>
          </article>
        </Card>
      </Styled(Card)>
    </div>
  </GalleryItem>
</PlatformCard>
`;
