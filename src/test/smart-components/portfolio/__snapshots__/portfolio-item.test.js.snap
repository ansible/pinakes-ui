// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PortfolioItem /> should render correctly 1`] = `
<PortfolioItem
  description="Bar"
  display_name="quux"
  id="1"
  metadata={
    Object {
      "user_capabilities": Object {
        "destroy": true,
      },
    }
  }
  name="Foo"
  orderUrl="/order"
>
  <Styled(Component)>
    <Component
      className="sc-ksZaOG YcbzJ"
    >
      <GalleryItem
        className="sc-ksZaOG YcbzJ"
      >
        <div
          className="sc-ksZaOG YcbzJ"
        >
          <Styled(Card)
            ouiaId="portfolio-item-1"
          >
            <Card
              className="sc-breuTD cbwRDx"
              ouiaId="portfolio-item-1"
            >
              <article
                className="pf-c-card sc-breuTD cbwRDx"
                data-ouia-component-id="portfolio-item-1"
                data-ouia-component-type="PF4/Card"
                data-ouia-safe={true}
                id=""
              >
                <CardHeader>
                  <div
                    className="pf-c-card__header"
                  >
                    <Styled(Level)>
                      <Level
                        className="sc-hAZoDl fTviMW"
                      >
                        <div
                          className="pf-l-level sc-hAZoDl fTviMW"
                        >
                          <CardIcon
                            src="/api/catalog/v1.3/portfolio_items/1/icon"
                          >
                            <styled.div
                              height={40}
                            >
                              <div
                                className="sc-iBkjds hhKvVV"
                                height={40}
                              >
                                <IconPlaceholder
                                  height={40}
                                >
                                  <svg
                                    height={40}
                                    width={40}
                                  >
                                    <circle
                                      cx={20}
                                      cy={20}
                                      fill="#ecebeb"
                                      r={20}
                                    />
                                  </svg>
                                </IconPlaceholder>
                                <Styled(c)
                                  delayTime={0}
                                  height={0}
                                  hidden={true}
                                  onError={[Function]}
                                  onLoad={[Function]}
                                  src="/api/catalog/v1.3/portfolio_items/1/icon"
                                  threshold={2000}
                                >
                                  <c
                                    afterLoad={[Function]}
                                    beforeLoad={[Function]}
                                    className="sc-gKXOVf bRtuWy"
                                    delayMethod="throttle"
                                    delayTime={0}
                                    effect=""
                                    height={0}
                                    hidden={true}
                                    onError={[Function]}
                                    onLoad={[Function]}
                                    placeholderSrc={null}
                                    src="/api/catalog/v1.3/portfolio_items/1/icon"
                                    threshold={2000}
                                    useIntersectionObserver={true}
                                    visibleByDefault={false}
                                    wrapperClassName=""
                                  >
                                    <u
                                      afterLoad={[Function]}
                                      beforeLoad={[Function]}
                                      className="sc-gKXOVf bRtuWy"
                                      delayMethod="throttle"
                                      delayTime={0}
                                      height={0}
                                      threshold={2000}
                                      useIntersectionObserver={true}
                                      visibleByDefault={false}
                                    >
                                      <img
                                        className="sc-gKXOVf bRtuWy"
                                        height={0}
                                        hidden={true}
                                        onError={[Function]}
                                        onLoad={[Function]}
                                        src="/api/catalog/v1.3/portfolio_items/1/icon"
                                      />
                                    </u>
                                  </c>
                                </Styled(c)>
                              </div>
                            </styled.div>
                          </CardIcon>
                        </div>
                      </Level>
                    </Styled(Level)>
                  </div>
                </CardHeader>
                <ServiceOfferingCardBody
                  description="Bar"
                  display_name="quux"
                  id="1"
                  metadata={
                    Object {
                      "user_capabilities": Object {
                        "destroy": true,
                      },
                    }
                  }
                  name="Foo"
                  orderUrl="/order"
                >
                  <Styled(CardBody)>
                    <CardBody
                      className="sc-evZas kNQDUR"
                    >
                      <div
                        className="pf-c-card__body sc-evZas kNQDUR"
                      >
                        <TextContent>
                          <div
                            className="pf-c-content"
                          >
                            <ConditionalLink>
                              <Text
                                component="h3"
                                title="Foo"
                              >
                                <h3
                                  className=""
                                  data-ouia-component-id="OUIA-Generated-Text-1"
                                  data-ouia-component-type="PF4/Text"
                                  data-ouia-safe={true}
                                  data-pf-content={true}
                                  title="Foo"
                                >
                                  <styled.div>
                                    <div
                                      className="sc-crXcEl gtYIan"
                                    >
                                      Foo
                                    </div>
                                  </styled.div>
                                </h3>
                              </Text>
                            </ConditionalLink>
                          </div>
                        </TextContent>
                        <ItemDetails
                          description="Bar"
                          display_name="quux"
                          id="1"
                          metadata={
                            Object {
                              "user_capabilities": Object {
                                "destroy": true,
                              },
                            }
                          }
                          orderUrl="/order"
                          toDisplay={
                            Array [
                              "description",
                            ]
                          }
                        >
                          <Truncate
                            ellipsis={
                              <Tooltip
                                content={
                                  <div>
                                    Bar
                                  </div>
                                }
                              >
                                <span>
                                  ...
                                </span>
                              </Tooltip>
                            }
                            key="tcard-prop-description"
                            lines={3}
                            trimWhitespace={false}
                            width={0}
                          >
                            <span
                              width={0}
                            >
                              <span />
                              <span>
                                <styled.div
                                  key="card-prop-description"
                                >
                                  <div
                                    className="sc-ftvSup eEFjJs"
                                  >
                                    Bar
                                  </div>
                                </styled.div>
                              </span>
                              <span
                                style={
                                  Object {
                                    "left": 0,
                                    "position": "fixed",
                                    "top": 0,
                                    "visibility": "hidden",
                                  }
                                }
                              >
                                <Tooltip
                                  content={
                                    <div>
                                      Bar
                                    </div>
                                  }
                                >
                                  <Popper
                                    appendTo={[Function]}
                                    distance={15}
                                    enableFlip={true}
                                    flipBehavior={
                                      Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                        "top",
                                        "right",
                                        "bottom",
                                      ]
                                    }
                                    isVisible={false}
                                    onBlur={[Function]}
                                    onDocumentClick={false}
                                    onDocumentKeyDown={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    onPopperMouseEnter={[Function]}
                                    onPopperMouseLeave={[Function]}
                                    onTriggerEnter={[Function]}
                                    placement="top"
                                    popper={
                                      <div
                                        aria-live="off"
                                        className="pf-c-tooltip"
                                        id="pf-tooltip-1"
                                        role="tooltip"
                                        style={
                                          Object {
                                            "maxWidth": null,
                                            "opacity": 0,
                                            "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                          }
                                        }
                                      >
                                        <TooltipArrow />
                                        <TooltipContent
                                          isLeftAligned={false}
                                        >
                                          <div>
                                            Bar
                                          </div>
                                        </TooltipContent>
                                      </div>
                                    }
                                    popperMatchesTriggerWidth={false}
                                    positionModifiers={
                                      Object {
                                        "bottom": "pf-m-bottom",
                                        "bottom-end": "pf-m-bottom-right",
                                        "bottom-start": "pf-m-bottom-left",
                                        "left": "pf-m-left",
                                        "left-end": "pf-m-left-bottom",
                                        "left-start": "pf-m-left-top",
                                        "right": "pf-m-right",
                                        "right-end": "pf-m-right-bottom",
                                        "right-start": "pf-m-right-top",
                                        "top": "pf-m-top",
                                        "top-end": "pf-m-top-right",
                                        "top-start": "pf-m-top-left",
                                      }
                                    }
                                    trigger={
                                      <span>
                                        ...
                                      </span>
                                    }
                                    zIndex={9999}
                                  >
                                    <FindRefWrapper
                                      onFoundRef={[Function]}
                                    >
                                      <span>
                                        ...
                                      </span>
                                    </FindRefWrapper>
                                  </Popper>
                                </Tooltip>
                              </span>
                            </span>
                          </Truncate>
                        </ItemDetails>
                      </div>
                    </CardBody>
                  </Styled(CardBody)>
                </ServiceOfferingCardBody>
                <CardFooter>
                  <div
                    className="pf-c-card__footer"
                  />
                </CardFooter>
              </article>
            </Card>
          </Styled(Card)>
        </div>
      </GalleryItem>
    </Component>
  </Styled(Component)>
</PortfolioItem>
`;
